$item-size: 210px;
$col-gutter: 10px;
$vp-gutter: $col-gutter;
$max-cols: 5;
$scrollbar-size: 20px;

@function grid-width($num-cols) {
	@return $num-cols * $item-size + ($num-cols - 1) * $col-gutter;
}

@mixin when-n-cols($n) {
	@media screen and (min-width: #{grid-width($n) + 2 * $vp-gutter + $scrollbar-size}) {
		@content;
	}
}

/*
 * Basics
 */

body {
	margin: 0;
	font-size: 16px;
	background-color: #222;
	color: #fff;
}

img {
	border: none;
}

/*
 * Common layout code
 */
 
.grid {
	margin: 0;
	padding: 0;
	list-style: none;
	
	margin: 40px auto;
	padding-left: $vp-gutter;
	padding-right: $vp-gutter;
}

/*
 * Float layout
 */

.grid {
	width: grid-width(1);
	
	.card {
		float: left;
		width: $item-size;
		height: $item-size;
		margin: 0;
		margin-bottom: $col-gutter;
	}
	
	&::after {
		content: '';
		display: table;
		clear: both;
	}
	
	@include when-n-cols(2) {
		width: grid-width(2);
		.card:nth-child(2n) {
			margin-right: $col-gutter;
		}
		.header {
			$header-size: grid-width(2);
			width: $header-size;
			height: $header-size;
		}
	}
	
	@include when-n-cols(3) {
		width: grid-width(3);
		.card {
			margin-right: $col-gutter;
		}
		.card:nth-child(2),
		.card:nth-child(3),
		.card:nth-child(3n + 6)
		{
			margin-right: 0;
		}
	}
	
	@include when-n-cols(4) {
		width: grid-width(4);
		.card,
		.card:nth-child(2),
		.card:nth-child(3),
		.card:nth-child(3n + 6)
		{
			margin-right: $col-gutter;
		}
		.card:nth-child(3),
		.card:nth-child(5),
		.card:nth-child(4n + 9)
		{
			margin-right: 0;
		}
	}
	
	@include when-n-cols(5) {
		width: grid-width(5);
		.card:nth-child(3),
		.card:nth-child(5),
		.card:nth-child(4n + 9)
		{
			margin-right: $col-gutter;
		}
		.card:nth-child(4),
		.card:nth-child(7),
		.card:nth-child(5n + 12)
		{
			margin-right: 0;
		}
	}
	
}

/*
 * CSS Grid Layout overrides the previous float layout on supporting browsers
 */
 
.grid {
	display: grid;
	grid-template-columns: repeat(auto-fill, $item-size);
	grid-auto-rows: $item-size;
	grid-gap: $col-gutter;
	
	justify-content: center;
}

@supports (display: grid) {
	.grid {
		width: auto;
		max-width: grid-width($max-cols);
		.card {
			margin: 0 !important;
		}
	}
}

@include when-n-cols(2) {
	.grid .header {
		grid-row: span 2;
		grid-column: span 2;
	}
}

/*
 * Cards
 */
 
.grid .card {
	transition-property: transform;
	transition-duration: 0.3s;
	
	transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
	
	background-color: #333;
}
 
.grid .card a {
	display: block;
	width: 100%;
	height: 100%;
	
	position: relative;
}

.grid .card img {
	display: block;
	width: 100%;
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}

.grid .card h2 {
	margin: 0;
	
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	
	padding: 10px;
	
	text-decoration: none;
	font-family: Raleway, sans-serif;
	font-weight: normal;
	font-size: 1em;
	letter-spacing: 1px;
	
	color: #fff;
	
	background: rgba(0,0,0, 0.2);
	background: radial-gradient(ellipse at center, transparent 0, rgba(0,0,0, .36) 100%);
}

.grid .card:hover {
	-webkit-transform: scale(0.95);
	-ms-transform: scale(0.95);
	transform: scale(0.95);
}

.grid .header:hover {
	-webkit-transform: none;
	-ms-transform: none;
	transform: none;
}

/* Focus style as hovering, if possible */
.grid .card a:focus {
	outline: 2px solid #d11ee9;
}
.grid .card:focus-within {
	-webkit-transform: scale(0.95);
	-ms-transform: scale(0.95);
    transform: scale(0.95);
}
.grid .card:focus-within a:focus {
	outline: none;
}

.grid .header {
	box-sizing: border-box;

	text-align: center;
	padding-top: 23px;
	
	font-size: 1.6875em;
	line-height: 1.3;
	
	background: radial-gradient(ellipse at center, transparent 0, rgba(0,0,0, 0.48) 100%) hsla(0, 0%, 27%, 1);
}

.grid .header h1 {
	margin-top: 0;
	margin-bottom: 0.67em;
	
	font-family: 'Cherry Swash', cursive;
	text-transform: capitalize;
	font-size: 1em;
	font-weight: normal;
	
	padding-left: 28px;
	padding-right: 28px;
}

.grid .header p {
	margin: 0;
	
	font-family: 'Raleway', sans-serif;
	font-size: 0.52em;
	
	padding-left: 34px;
	padding-right: 34px;
	
	color: #c7c7c7;
}

@include when-n-cols(2) {
	.grid .header {
		font-size: 2.5em;
		
		padding-top: 100px;
	}
	
	.grid .header h1 {
		padding-left: 80px;
		padding-right: 80px;
	}

	.grid .header p {
		padding-left: 120px;
		padding-right: 120px;
	}
}
